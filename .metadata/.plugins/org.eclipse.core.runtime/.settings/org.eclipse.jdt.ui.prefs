content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.jdt.ui.javaPostfixProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.jdt.ui.javaChainProposalCategory\u0000
content_assist_favorite_static_members=org.assertj.core.api.Assertions.*;org.mockito.Matchers.*;org.mockito.Mockito.*;org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestBuilders.*;org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.*;org.springframework.security.test.web.servlet.response.SecurityMockMvcResultMatchers.*;org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.*;org.springframework.restdocs.mockmvc.MockMvcRestDocumentation.*;org.springframework.test.web.client.match.MockRestRequestMatchers.*;org.springframework.test.web.client.response.MockRestResponseCreators.*;org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;org.springframework.test.web.servlet.result.MockMvcResultHandlers.*;org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;org.hamcrest.CoreMatchers.*;org.junit.Assert.*
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="java.lang.Appendable"><rhs name\="java.io.PrintStream"/></lhs><lhs name\="java.io.Closeable"><rhs name\="java.io.PrintStream"/><rhs name\="java.io.InputStreamReader"/></lhs><lhs name\="java.lang.AutoCloseable"><rhs name\="java.io.PrintStream"/><rhs name\="java.io.InputStreamReader"/></lhs><lhs name\="java.io.FilterOutputStream"><rhs name\="java.io.PrintStream"/></lhs><lhs name\="java.io.OutputStream"><rhs name\="java.io.PrintStream"/></lhs><lhs name\="java.io.Flushable"><rhs name\="java.io.PrintStream"/></lhs><lhs name\="java.io.PrintStream"><rhs name\="java.io.PrintStream"/></lhs><lhs name\="javax.naming.Context"><rhs name\="javax.naming.InitialContext"/></lhs><lhs name\="javax.naming.InitialContext"><rhs name\="javax.naming.InitialContext"/></lhs><lhs name\="java.util.SequencedCollection"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.List"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="db.vo.VisitVo"><rhs name\="db.vo.VisitVo"/></lhs><lhs name\="db.vo.MemberVo"><rhs name\="db.vo.MemberVo"/></lhs><lhs name\="comments.vo.CommentsVo"><rhs name\="comments.vo.CommentsVo"/></lhs><lhs name\="org.jdom2.input.sax.SAXEngine"><rhs name\="org.jdom2.input.SAXBuilder"/></lhs><lhs name\="org.jdom2.input.SAXBuilder"><rhs name\="org.jdom2.input.SAXBuilder"/></lhs><lhs name\="vo.PersonVo"><rhs name\="vo.PersonVo"/></lhs><lhs name\="org.json.JSONObject"><rhs name\="org.json.JSONObject"/></lhs><lhs name\="java.io.Reader"><rhs name\="java.io.InputStreamReader"/></lhs><lhs name\="java.lang.Readable"><rhs name\="java.io.InputStreamReader"/></lhs><lhs name\="java.io.InputStreamReader"><rhs name\="java.io.InputStreamReader"/></lhs><lhs name\="java.util.Map"><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.io.File"><rhs name\="java.io.File"/></lhs><lhs name\="com.example.demo.vo.PersonVo"><rhs name\="com.example.demo.vo.PersonVo"/></lhs></history>
content_assist_number_of_computers=21
eclipse.preferences.version=1
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.internal.ui.navigator.librariesnode=true
org.eclipse.jdt.ui.formatterprofiles.version=23
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="_delete">\tpublic int delete(int idx) {&\#13;\r\n&\#13;\r\n        int res \= 0;&\#13;\r\n&\#13;\r\n\t\tConnection conn \= null;&\#13;\r\n\t\tPreparedStatement pstmt \= null;&\#13;\r\n&\#13;\r\n\t\tString sql \= "delete from \uD14C\uC774\uBE14\uBA85  where idx\=?";&\#13;\r\n&\#13;\r\n\t\ttry {&\#13;\r\n\t\t\t//1.Connection \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\tconn \= DBService.getInstance().getConnection();&\#13;\r\n&\#13;\r\n\t\t\t//2.PreparedStatement\uC5BB\uAE30&\#13;\r\n\t\t\tpstmt \= conn.prepareStatement(sql);&\#13;\r\n&\#13;\r\n            //3.PrepareStatement Parameter\uC124\uC815&\#13;\r\n            pstmt.setInt(1,idx);&\#13;\r\n \t\t\t&\#13;\r\n\t\t\t//4.DB delete&\#13;\r\n            res \= pstmt.executeUpdate();&\#13;\r\n\t\t\t&\#13;\r\n&\#13;\r\n\t\t} catch (Exception e) {&\#13;\r\n\t\t\t// TODO\: handle exception&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t} finally {&\#13;\r\n&\#13;\r\n\t\t\ttry {&\#13;\r\n\t\t\t\tif (pstmt \!\= null)&\#13;\r\n\t\t\t\t\tpstmt.close();&\#13;\r\n\t\t\t\tif (conn \!\= null)&\#13;\r\n\t\t\t\t\tconn.close();&\#13;\r\n\t\t\t} catch (SQLException e) {&\#13;\r\n\t\t\t\t// TODO Auto-generated catch block&\#13;\r\n\t\t\t\te.printStackTrace();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\treturn res;&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="_forward_servlet">import jakarta.servlet.RequestDispatcher;&\#13;\r\nimport jakarta.servlet.ServletException;&\#13;\r\nimport jakarta.servlet.annotation.WebServlet;&\#13;\r\nimport jakarta.servlet.http.HttpServlet;&\#13;\r\nimport jakarta.servlet.http.HttpServletRequest;&\#13;\r\nimport jakarta.servlet.http.HttpServletResponse;&\#13;\r\nimport java.io.IOException;&\#13;\r\n&\#13;\r\n/**&\#13;\r\n * Servlet implementation class ${primary_type_name}&\#13;\r\n */&\#13;\r\n@WebServlet("/${cursor}")&\#13;\r\npublic class ${primary_type_name} extends HttpServlet {&\#13;\r\n\tprivate static final long serialVersionUID \= 1L;&\#13;\r\n&\#13;\r\n\t/**&\#13;\r\n\t * @see HttpServlet\#service(HttpServletRequest request, HttpServletResponse response)&\#13;\r\n\t */&\#13;\r\n\tprotected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {&\#13;\r\n\t\t// TODO Auto-generated method stub&\#13;\r\n\t\t&\#13;\r\n\t\t&\#13;\r\n\t\t&\#13;\r\n\t\t//dispatcher(forward)&\#13;\r\n\t\tString forward_page \= "";&\#13;\r\n\t\tRequestDispatcher disp \= request.getRequestDispatcher(forward_page);&\#13;\r\n\t\tdisp.forward(request, response);&\#13;\r\n\t\t&\#13;\r\n\t}&\#13;\r\n&\#13;\r\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="_insert">\tpublic int insert(${argType} vo) {&\#13;\r\n&\#13;\r\n        int res \= 0;&\#13;\r\n&\#13;\r\n\t\tConnection conn \= null;&\#13;\r\n\t\tPreparedStatement pstmt \= null;&\#13;\r\n&\#13;\r\n\t\tString sql \= "insert into \uD14C\uC774\uBE14\uBA85 values()";&\#13;\r\n&\#13;\r\n\t\ttry {&\#13;\r\n\t\t\t//1.Connection \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\tconn \= DBService.getInstance().getConnection();&\#13;\r\n&\#13;\r\n\t\t\t//2.PreparedStatement\uC5BB\uAE30&\#13;\r\n\t\t\tpstmt \= conn.prepareStatement(sql);&\#13;\r\n&\#13;\r\n            //3.PrepareStatement Parameter\uC124\uC815&\#13;\r\n            \t\t\t&\#13;\r\n\t\t\t//4.DB Insert&\#13;\r\n            res \= pstmt.executeUpdate();&\#13;\r\n\t\t\t&\#13;\r\n&\#13;\r\n\t\t} catch (Exception e) {&\#13;\r\n\t\t\t// TODO\: handle exception&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t} finally {&\#13;\r\n&\#13;\r\n\t\t\ttry {&\#13;\r\n\t\t\t\tif (pstmt \!\= null)&\#13;\r\n\t\t\t\t\tpstmt.close();&\#13;\r\n\t\t\t\tif (conn \!\= null)&\#13;\r\n\t\t\t\t\tconn.close();&\#13;\r\n\t\t\t} catch (SQLException e) {&\#13;\r\n\t\t\t\t// TODO Auto-generated catch block&\#13;\r\n\t\t\t\te.printStackTrace();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\treturn res;&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="_selectList">\tpublic List&lt;${argType}&gt; selectList(){&\#13;\r\n\t\t&\#13;\r\n\t\tList&lt;${argType}&gt; list \= new ArrayList&lt;${argType}&gt;();&\#13;\r\n\t\t&\#13;\r\n\t\tConnection\t      conn  \= null;&\#13;\r\n\t\tPreparedStatement pstmt \= null;&\#13;\r\n\t\tResultSet         rs    \= null;&\#13;\r\n\t\t&\#13;\r\n\t\tString            sql   \= "select * from [\uD14C\uC774\uBE14\uBA85]";&\#13;\r\n\t\t&\#13;\r\n\t\ttry {&\#13;\r\n\t\t\t//1.Connection \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\tconn \= DBService.getInstance().getConnection();&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t//2.PreparedStatement\uC5BB\uAE30&\#13;\r\n\t\t\tpstmt \= conn.prepareStatement(sql);&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t//3.ResultSet \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\trs \= pstmt.executeQuery();&\#13;\r\n\t\t\t&\#13;\r\n\t\t\t//\uB808\uCF54\uB4DC\uAC12\uC744 VO\uD3EC\uC7A5\uD6C4 list\uB123\uB294\uB2E4&\#13;\r\n\t\t\twhile(rs.next()) {&\#13;\r\n\t\t\t\t&\#13;\r\n\t\t\t\t${argType} vo \= new ${argType}();&\#13;\r\n\t\t\t\t//rs\uAC00 \uAC00\uB9AC\uD0A4\uB294 \uB808\uCF54\uB4DC\uAC12\uC744 vo\uC5D0 \uB123\uB294\uB2E4&\#13;\r\n\t\t\t\t&\#13;\r\n\t\t\t\t\t\t\t\t&\#13;\r\n\t\t\t\tlist.add(vo);&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\t&\#13;\r\n\t\t} catch (Exception e) {&\#13;\r\n\t\t\t// TODO\: handle exception&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t} finally {&\#13;\r\n\t\t\t&\#13;\r\n\t\t\ttry {&\#13;\r\n\t\t\t\tif(rs\!\=null) rs.close();&\#13;\r\n\t\t\t\tif(pstmt\!\=null)pstmt.close();&\#13;\r\n\t\t\t\tif(conn\!\=null)conn.close();&\#13;\r\n\t\t\t} catch (SQLException e) {&\#13;\r\n\t\t\t\t// TODO Auto-generated catch block&\#13;\r\n\t\t\t\te.printStackTrace();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t}&\#13;\r\n\t\t&\#13;\r\n\t\treturn list;&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="_selectOne">\tpublic ${argType} selectOne(int idx) {&\#13;\r\n&\#13;\r\n        ${argType} vo \= null;&\#13;\r\n&\#13;\r\n\t\tConnection conn \= null;&\#13;\r\n\t\tPreparedStatement pstmt \= null;&\#13;\r\n\t\tResultSet rs \= null;&\#13;\r\n&\#13;\r\n\t\tString sql \= "select * from \uD14C\uC774\uBE14\uBA85 where idx\=?";&\#13;\r\n&\#13;\r\n\t\ttry {&\#13;\r\n\t\t\t//1.Connection \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\tconn \= DBService.getInstance().getConnection();&\#13;\r\n&\#13;\r\n\t\t\t//2.PreparedStatement\uC5BB\uAE30&\#13;\r\n\t\t\tpstmt \= conn.prepareStatement(sql);&\#13;\r\n&\#13;\r\n            //3.PrepareStatement Parameter\uC124\uC815&\#13;\r\n            pstmt.setInt(1,idx);&\#13;\r\n&\#13;\r\n\t\t\t//3.ResultSet \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\trs \= pstmt.executeQuery();&\#13;\r\n&\#13;\r\n\t\t\t&\#13;\r\n\t\t\tif (rs.next()) {&\#13;\r\n&\#13;\r\n\t\t\t\tvo \= new ${argType}();&\#13;\r\n\t\t\t\t//rs\uAC00 \uAC00\uB9AC\uD0A4\uB294 \uB808\uCF54\uB4DC\uAC12\uC744 vo\uC5D0 \uB123\uB294\uB2E4&\#13;\r\n&\#13;\r\n\t\t\t}&\#13;\r\n&\#13;\r\n\t\t} catch (Exception e) {&\#13;\r\n\t\t\t// TODO\: handle exception&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t} finally {&\#13;\r\n&\#13;\r\n\t\t\ttry {&\#13;\r\n\t\t\t\tif (rs \!\= null)&\#13;\r\n\t\t\t\t\trs.close();&\#13;\r\n\t\t\t\tif (pstmt \!\= null)&\#13;\r\n\t\t\t\t\tpstmt.close();&\#13;\r\n\t\t\t\tif (conn \!\= null)&\#13;\r\n\t\t\t\t\tconn.close();&\#13;\r\n\t\t\t} catch (SQLException e) {&\#13;\r\n\t\t\t\t// TODO Auto-generated catch block&\#13;\r\n\t\t\t\te.printStackTrace();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\treturn vo;&\#13;\r\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="_singleton">\t//single-ton&\#13;\r\n\tstatic ${primary_type_name} single \= null;&\#13;\r\n\t&\#13;\r\n\tpublic static ${primary_type_name} getInstance() {&\#13;\r\n\t\t&\#13;\r\n\t    if(single\=\=null) &\#13;\r\n\t    \t single \= new ${primary_type_name}();&\#13;\r\n\t\t&\#13;\r\n\t\treturn single;&\#13;\r\n\t}&\#13;\r\n\t&\#13;\r\n\tprivate ${primary_type_name}() {&\#13;\r\n&\#13;\r\n    }</template><template autoinsert\="true" context\="java" deleted\="false" description\="" enabled\="true" name\="_update">\tpublic int update(${argType} vo) {&\#13;\r\n&\#13;\r\n        int res \= 0;&\#13;\r\n&\#13;\r\n\t\tConnection conn \= null;&\#13;\r\n\t\tPreparedStatement pstmt \= null;&\#13;\r\n&\#13;\r\n\t\tString sql \= "update \uD14C\uC774\uBE14\uBA85 set \uD544\uB4DC\uBA85\=\uAC12  where idx\=?";&\#13;\r\n&\#13;\r\n\t\ttry {&\#13;\r\n\t\t\t//1.Connection \uC5BB\uC5B4\uC624\uAE30&\#13;\r\n\t\t\tconn \= DBService.getInstance().getConnection();&\#13;\r\n&\#13;\r\n\t\t\t//2.PreparedStatement\uC5BB\uAE30&\#13;\r\n\t\t\tpstmt \= conn.prepareStatement(sql);&\#13;\r\n&\#13;\r\n            //3.PrepareStatement Parameter\uC124\uC815&\#13;\r\n            \t\t\t&\#13;\r\n\t\t\t//4.DB update&\#13;\r\n            res \= pstmt.executeUpdate();&\#13;\r\n\t\t\t&\#13;\r\n&\#13;\r\n\t\t} catch (Exception e) {&\#13;\r\n\t\t\t// TODO\: handle exception&\#13;\r\n\t\t\te.printStackTrace();&\#13;\r\n\t\t} finally {&\#13;\r\n&\#13;\r\n\t\t\ttry {&\#13;\r\n\t\t\t\tif (pstmt \!\= null)&\#13;\r\n\t\t\t\t\tpstmt.close();&\#13;\r\n\t\t\t\tif (conn \!\= null)&\#13;\r\n\t\t\t\t\tconn.close();&\#13;\r\n\t\t\t} catch (SQLException e) {&\#13;\r\n\t\t\t\t// TODO Auto-generated catch block&\#13;\r\n\t\t\t\te.printStackTrace();&\#13;\r\n\t\t\t}&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t\treturn res;&\#13;\r\n\t}</template></templates>
spelling_locale_initialized=true
typefilter_migrated_2=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
